/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package towerdefence;

import Interface.OverlayPanel;
import Interface.Playfield;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author Glenn Latomme <glenn.latomme@gmail.com>
 */
public class Game extends javax.swing.JPanel implements Runnable {

    Thread Th;
    // Gamefield
    Playfield Playfield = new Playfield();
    // Overlay
    public boolean EscIsPressed = false;
    OverlayPanel OverlayPanel = new OverlayPanel();

    public Game() {
        initComponents();
        Th = new Thread(this);
        Th.start();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
       OverlayPanel.MouseClicked(evt);
    }//GEN-LAST:event_formMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            Tick();
            repaint();
            
        }
    }

    private void Tick() {
        if (EscIsPressed == false) {
            Playfield.tick();
        } else {
            OverlayPanel.tick();
        }
    }

    @Override
    public void paintComponent(Graphics g) {       
        if (EscIsPressed == false) {
            Playfield.paint(g);
        } else {
            OverlayPanel.paint(g);
        }
    }
}